/* Test Case:
7 15
a 10 2
b 5 3
c 15 5
d 7 7
e 6 1
f 18 4
g 3 1
*/

#include <bits/stdc++.h>
using namespace std;

typedef struct product
{
    char id;
    int price;
    int weight;
    double unitprice;
}product;

int main()
{
    int n, capacity;
    cin >> n>> capacity;
    product p[n];
    for(int i = 0; i < n; i++)
    {
        cin >> p[i].id >> p[i].price >> p[i].weight;
        p[i].unitprice = (double)p[i].price / p[i].weight;
    }
    
    sort(p, p + n, [](product a, product b) 
    {
        return a.unitprice > b.unitprice;
    });
    product selected[n];

    double maximumprofit = 0;
    int j = 0;
    double remainingCapacity = capacity;
    for (int i = 0; i < n; i++)
    {
        if (remainingCapacity >= p[i].weight)
        {
            selected[j++] = p[i];
            remainingCapacity -= p[i].weight;
            maximumprofit += p[i].price;
        }
        else
        {
            int weightToTake = remainingCapacity;
            maximumprofit += p[i].price * (weightToTake / (double)p[i].weight);
            break;
        }
    }
    cout<<"Selected Items: "<<"\n";
    for (int i = 0; i < j; i++)
    {
        cout<<selected[i].id<<" ";
    }
    cout<<"\n";
    cout<< "Maximum Profit: "<< maximumprofit<<endl;
    
    return 0;
}
